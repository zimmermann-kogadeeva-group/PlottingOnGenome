
stages:
  - build
  - deploy

publish:
  stage: build
  image: python:latest
  script:
    - pip install build twine
    - python -m build
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  rules:
    - if: $CI_COMMIT_TAG

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.24.0-debug
    entrypoint: [ "" ]
  script:
    - /kaniko/executor 
      --context ${CI_PROJECT_DIR} 
      --dockerfile ${CI_PROJECT_DIR}/Dockerfile 
      --destination ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
      --destination ${CI_REGISTRY_IMAGE}:latest
  rules:
    - if: $CI_COMMIT_TAG

deploy:
  stage: deploy
  script:
    - apt update && apt install -y ssh
    - chmod 400 ${SSH_KEY}
    - ssh -i ${SSH_KEY} -o StrictHostKeyChecking=no podman@zim-matlab01.embl.de "docker login -u ${CI_DEPLOY_USER} -p ${CI_DEPLOY_TOKEN} registry.git.embl.org"
    - ssh -i ${SSH_KEY} -o StrictHostKeyChecking=no podman@zim-matlab01.embl.de "docker rm -f ${CI_PROJECT_NAME} || true"
    - ssh -i ${SSH_KEY} -o StrictHostKeyChecking=no podman@zim-matlab01.embl.de "docker rmi \$(docker images -q ${CI_REGISTRY_IMAGE}) || true"
    - ssh -i ${SSH_KEY} -o StrictHostKeyChecking=no podman@zim-matlab01.embl.de "docker run -d --name ${CI_PROJECT_NAME} --restart always -p 8501:8501 ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
  rules:
    - if: $CI_COMMIT_TAG
